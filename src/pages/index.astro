---

---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>100 a Day</title>
	</head>
	<body onload="refresh()">
		<h1>100 a Day</h1>
		<main>
			<div id="reps">0</div>
			<div id="tracker">
				<div id="tracked"></div>
			</div>
			<form>
				<input type="number" name="logged" />
				<input type="submit" value="Log" />
			</form>
		</main>
		<script is:inline>
			const config = {
				from : { hour: 5, minute: 0 },
				to : { hour: 20, minute: 0 },
				goal: 100
			};

			const units = {
				from: config.from.hour * 60 + config.from.minute,
				to: config.to.hour * 60 + config.to.minute,
			};
			units.minutesPerUnit = (units.to - units.from) / config.goal;

			async function refresh(logged=0) {
				let now = new Date();
				let today = new Date().toLocaleDateString();
				let projected = (now.getHours() * 60 + now.getMinutes() - units.from) / units.minutesPerUnit;
				let completed = logged*1;

				let logs = JSON.parse(await localStorage.getItem('100aDay'));
				if (logs && logs.lastUpdated === today) {
					completed += logs.completed*1;
				}

				localStorage.setItem('100aDay', JSON.stringify({
					lastUpdated: today,
					completed: completed
				}));

				document
					.querySelector("#reps")
					.setHTMLUnsafe(`${Math.min(Math.max(Math.ceil(projected-completed), 0), config.goal)}`);
				document
					.querySelector("#tracked")
					.setAttribute('style', `width:${completed}%`);
			}

			document.querySelector("form")?.addEventListener("submit", async (event) => {
				event.preventDefault();
				refresh(parseInt(event.target.logged.value || "0"));
				event.target.logged.value = null;
			});

			setInterval(refresh, 1000 * 60);
		</script>
	</body>
</html>

<style>
	html {
		background-color: #27213a;
		color: #0cc;
		margin: 0;
		padding: 0;
	}
	body {
		max-width: 100ch;
		margin: 0 auto;
		padding: 0 1rem;
	}
	main {
		display: flex;
		flex-direction: column;
		align-items: center;
		justify-content: center;
		gap: 3rem;
	}
	#reps {
		font-size: 6rem;
		color: #f0a;
	}
	#tracker {
		height: .25rem;
		background-color: #0cc2;
		width: 100%;
	}
	#tracked {
		height: 100%;
		width: 0%; 
		background-color:#0cc;
	}
</style>